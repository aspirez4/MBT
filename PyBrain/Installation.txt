################################################
#                   PyBrain                    #
################################################

###### download enthought canopy
https://store.enthought.com/downloads/#default

###### change system enviroment variable 
C:\Users\<username>\AppData\Local\Enthought\Canopy\User\Scripts

###### get pybrain
git clone git://github.com/pybrain/pybrain.git pybrain
python setup.py install
python
import pybrain




################################################
#                  TensorFlow                  #
################################################

###### Update pip (python 2.7.9+ / 3.4+)
python -m pip install -U pip

###### Donload and install Microsoft Visual C++ Compiler for Python 2.7
https://www.microsoft.com/en-us/download/details.aspx?id=44266


###### Install tensorflow
easy_install --upgrade six
pip install --upgrade https://storage.googleapis.com/tensorflow/mac/tensorflow-0.5.0-py2-none-any.whl
easy_install -U six


docker-machine create --driver virtualbox Tensorflow
docker-machine ls
docker-machine env --shell cmd Tensorflow
FOR /f "tokens=*" %i IN ('docker-machine env --shell cmd Tensorflow') DO %i
docker run -dit b.gcr.io/tensorflow/tensorflow

wget https://www.python.org/ftp/python/3.5.1/Python-3.5.1.tgz
tar xf Python-3.5.1.tgz
./configure
make
sudo make install

###### Test TensorFlow installation
$ python

import tensorflow as tf
hello = tf.constant('Hello, TensorFlow!')
sess = tf.Session()
print sess.run(hello)

a = tf.constant(10)
b = tf.constant(32)
print sess.run(a + b)



################################################
#                   Theano                     #
################################################

0. install the following:
	Microsoft Visual C++ Compiler for Python 2.7 (AND GREATER)
	CUDA 5.5 (AND GREATER)
	
1. create folder C:\Users\Or\AppData\Local\SciSoft

2. install the following:
	TDM_Gcc64
	WinPython-64bit-2.7.10.3
	WinPython-64bit-3.5.1.2
	
3. add "C:\Users\Or\AppData\Local\SciSoft\TDM_Gcc64\x86_64-w64-mingw32\bin" to PATH

4. Confirm all following works:
	where gcc
	where gendef
	where cl
	where nvcc
	
5. for boath WinPython do the following accordingly:
	gendef C:\Users\Or\AppData\Local\SciSoft\WinPython-64bit-2.7.10.3\python-2.7.10.amd64\python27.dll
	dlltool --dllname python27.dll --def python27.def --output-lib C:\Users\Or\AppData\Local\SciSoft\WinPython-64bit-2.7.10.3\python-2.7.10.amd64\libs\libpython27.a

6. create env.bat file like:
	REM configuration of paths
	REM set VSFORPYTHON="C:\Program Files (x86)\Common Files\Microsoft\Visual C++ for Python\9.0"
	set VSFORPYTHON="C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC"
	set SCISOFT=%~dp0
	REM add tdm gcc stuff
	set PATH=C:\Users\Or\AppData\Local\SciSoft\TDM_Gcc64\bin;C:\Users\Or\AppData\Local\SciSoft\TDM_Gcc64\x86_64-w64-mingw32\bin;%PATH%
	REM add winpython stuff
	REM CALL C:\Users\Or\AppData\Local\SciSoft\WinPython-64bit-3.5.1.2\scripts\env.bat
	CALL C:\Users\Or\AppData\Local\SciSoft\WinPython-64bit-2.7.10.3\scripts\env.bat
	REM configure path for msvc compilers
	REM for a 32 bit installation change this line to
	REM CALL %VSFORPYTHON%\vcvarsall.bat
	CALL %VSFORPYTHON%\vcvarsall.bat amd64
	REM return a shell
	cmd.exe /k
	
7. create ".theanorc" file in: "C:\Users\Or\AppData\Local\SciSoft\WinPython-64bit-2.7.10.3\settings"
	with the following configuration: 

	[global]
	device = cpu
	floatX = float32
